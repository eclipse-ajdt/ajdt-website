<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<?xml-stylesheet type="text/xsl" href="http://www.eclipse.org/projects/project-plan.xsl"?>
<plan plan-format="1.0" name="Project Name" xmlns="http://www.eclipse.org/project/plan" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<release projectid="tools.ajdt" version="2.2.0" />
	<introduction>
		<html:div>
<html:p>
AJDT released 2.2.0 to coincide with the Eclipse Juno release in late June 2012.  In this release of AJDT, 
there will only be one stream of AJDT that is compatible with both Eclipse Indigo and Eclipse Juno.  Pervious 
releases of AJDT had separate streams for different Eclipse releases.  AJDT 2.2.0 will no longer support
Eclipse Helios.  There will be no more changes to the Eclipse Helios stream unless a 
critical bug is discovered and fixed.  We are planning to release AJDT version 2.2.1 in late 2012 and 2.3.0 for the Kepler release/
</html:p>
     </html:div> 
	</introduction>
	<release_deliverables>
		<html:div>
			<html:p>
				AJDT includes 6 plugins from two other EPL Eclipse.org projects:
				<html:ul>
					<html:li>
						The
						<html:a
							href="http://www.eclipse.org/projects/project-plan.php?projectid=tools.aspectj">AspectJ project</html:a>
						contributes three plugins.
						These plugins are
						<html:em>org.aspectj.runtime</html:em>
						, which contains the AspectJ runtime,
						<html:em>org.aspectj.ajde</html:em>
						, which contains AspectJ support for integrating with a
						development environment,
						and
						<html:em>org.aspectj.weaver</html:em>
						, which contains the AspectJ weaver and compiler.
					</html:li>

					<html:li>
						The
						<html:a
							href="http://www.eclipse.org/equinox/incubator/aspects/index.php">Equinox Aspects project</html:a>
						, part of the Eqinox Incubator also contributes three plugins.
						These are
						<html:em>org.eclipse.equinox.weaving.aspectj
						</html:em>
						, which contains the equinox weaving service,
						<html:em>org.eclipse.equinox.weaving.hook
						</html:em>
						, which contains the OSGi framework extension for the weaving
						service to plug in, and
						<html:em>org.eclipse.equinox.weaving.source
						</html:em>
						, which contains Equinox Aspects source code.
					</html:li>
				</html:ul>
			</html:p>
		</html:div>
	</release_deliverables>
	<release_milestones>
		<preamble>
		<html:div>Milestones and service refreshes will be released as required.  Typically, AJDT goes on a 
		6 month cycle for service refreshes.</html:div>
		</preamble>
		<milestone date="12/05/2012" milestone="2.2.1">
			<html:div>Service refresh of AJDT</html:div>
		</milestone>
		<postamble>
			<html:div></html:div>
		</postamble>
	</release_milestones>
	<target_environments>
		<html:div>AJDT 2.2.0 requires Eclipse 3.7, 3.8, or 4.2.  As such, AJDT has the same JRE requirements as Eclipse.</html:div>
		<internationalization>
			<html:div>English language bundles are available for many AJDT messages, but they have not been translated.
          </html:div>
		</internationalization>
	</target_environments>
	<compatibility_with_previous_releases>
		<html:div>ADJT versions are designed to be backwards compatible with older versions of the same stream.  However, since different streams 
		run on different Eclipse versions, there is no compatibility between streams, even though the feature sets and APIs are largely the same.</html:div>
	</compatibility_with_previous_releases>
		<themes_and_priorities> 
		<preamble>
			<html:div>Our current focus is two-fold: AspectJ 1.7 support, and IDE support for load-time weaving. 
				These themes are generated
				from user requests in the community. As such, we want
				to maintain flexibility and put effort into new themes if they are
				coherently generated from the community.
			</html:div>
		</preamble>
		<theme name="IDE support for Load Time Weaving (LTW)">
			<description>
				<html:p>
					Currently, aspects applied to a project through LTW are not visible in the
					editor in the standard ways that compile time aspects are. These
					include
					gutter annotations and entries in the crosscutting view. Because there is
					no editing support, using LTW can be time consuming and
					error-prone. We will
					explore ways to gather and display LTW information to the programmer while
					editing.
        </html:p>
			</description>
			<committed
				bugzilla="https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced&amp;short_desc_type=allwords&amp;short_desc=[ltw]+[plan]&amp;product=AJDT&amp;long_desc_type=allwordssubstr&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;status_whiteboard_type=allwordssubstr&amp;status_whiteboard=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;bug_status=VERIFIED&amp;bug_status=CLOSED&amp;emailtype1=substring&amp;email1=&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">
			</committed>
			<proposed
				bugzilla="https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced&amp;short_desc_type=allwords&amp;short_desc=[ltw]+[plan]&amp;product=AJDT&amp;long_desc_type=allwordssubstr&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;status_whiteboard_type=allwordssubstr&amp;status_whiteboard=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=REOPENED&amp;emailtype1=substring&amp;email1=&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">
			</proposed>
		</theme>
		<theme name="AspectJ 1.7 support">
			<description>
				<html:p>
				AspectJ 1.7 will be introducing new language features.  AJDT must support them when they are available.
        </html:p>
			</description>
			<committed
				bugzilla="https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced;list_id=1102967;short_desc=%5Bplan%5D%20%5Baspect17%5D;bug_status=RESOLVED;bug_status=VERIFIED;bug_status=CLOSED;short_desc_type=allwordssubstr;product=AJDT">
			</committed>
			<proposed
				bugzilla="https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced;list_id=1103055;short_desc=%5Bplan%5D%20%5Baspect17%5D;bug_status=UNCONFIRMED;bug_status=NEW;bug_status=ASSIGNED;bug_status=REOPENED;short_desc_type=allwordssubstr;product=AJDT">
			</proposed>
		</theme>
	</themes_and_priorities>
</plan>